apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka2
  name: kafka2
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: kafka2
    spec:
      containers:
      - env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka2:9093
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: PLAINTEXT
        - name: KAFKA_JMX_OPTS
          value: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false
            -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka2
            -Dcom.sun.management.jmxremote.rmi.port=9992
        - name: KAFKA_JMX_PORT
          value: "9992"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        image: confluentinc/cp-kafka:latest
        name: kafka2
        ports:
        - containerPort: 9093
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/kafka/data
          name: kafka2-data
        - mountPath: /etc/kafka/secrets
          name: kafka2-data
      restartPolicy: Always
      volumes:
      - name: kafka2-data
        persistentVolumeClaim:
          claimName: kafka2-data
      - name: kafka2-data
        persistentVolumeClaim:
          claimName: kafka2-data
status: {}
